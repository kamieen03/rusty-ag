{"version":3,"sources":["common/Header.js","searching/LinkList.js","constants.js","searching/SearchResults.js","searching/Searcher.js","error/NoContentMessage.js","common/CubeSpinner.js","entity/Entity.js","entity/EntityDescription.js","entity/item/Item.js","entity/item/MultiLinksItem.js","entity/item/MultiItem.js","artist/ArtistEntityDescription.js","error/NoPhotoAvailable.js","common/LoadablePhoto.js","entity/EntityImage.js","artist/ArtistEntityImage.js","artist/ArtistEntity.js","artist/Artist.js","entity/item/LinkItem.js","artwork/ArtworkEntityDescription.js","common/UploadButton.js","helper.js","artwork/StyleTransferButton.js","artwork/ArtworkEntityImage.js","artwork/ArtworkEntity.js","artwork/Artwork.js","artwork/ArtworkCell.js","common/BlackAndWhiteLink.js","grid/GridView.js","grid/Grid.js","artwork/ArtworksGrid.js","artmovement/ArtMovementCell.js","artmovement/ArtMovementGrid.js","popular/Popular.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","to","IconButton","onClick","onStartSearching","LinkList","undefined","data","slice","map","item","i","key","idFieldName","url","onLinkClick","valueFieldName","ROOT_URL","GET_SEARCH_URL","GET_ARTIST_URL","GET_ARTWORK_URL","GET_ART_MOVEMENT_URL","GET_ARTIST_ARTWORKS_URL","artistId","GET_POPULAR_ARTWORKS","POST_STYLE_TRANSFER","SearchResults","state","results","prevProps","this","searchPhrase","fetchSearchResults","then","setState","phrase","response","fetch","json","artists","artworks","styles","Component","Searcher","handleSearchPhraseChange","bind","handleEscKeyDown","event","target","value","keyCode","onStopSearching","onKeyDown","type","placeholder","autoFocus","onChange","React","NoContentMessage","CubeSpinner","Entity","isLoaded","hasError","fetchData","id","onEntityChange","reset","receivedData","description","cloneElement","image","onLoad","entity","noContent","EntityDescription","title","children","Item","name","MultiLinksItem","linksList","links","link","MultiItem","valuesList","values","ArtistEntityDescription","birth","death","nationality","field","painting_school","art_movement","influenced_by","NoPhotoAvailable","LoadablePhoto","handleLoading","handleError","src","alt","styleName","onError","EntityImage","ArtistEntityImage","image_url","ArtistEntity","onArtistChange","Artist","isArtistLoaded","handleArtistChange","match","params","LinkItem","ArtworkEntityDescription","artist_name","artist_url","completition_year","period","serie","location","gallery","media","size_x","size_y","useStyles","makeStyles","theme","button","fontSize","UploadButton","classes","accept","onUpload","htmlFor","Button","size","component","startIcon","text","idToName","split","word","toUpperCase","substr","join","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","StyleTransferButton","loadImage","img","Image","a","files","fileBase64","artworkId","width","height","method","body","JSON","stringify","ArtworkEntityImage","ArtworkEntity","onArtworkChange","Artwork","isArtworkLoaded","handleArtworkChange","ArtworkCell","backgroundImageStyle","backgroundImage","backgroundSize","contentId","style","completitionYear","BlackAndWhiteLink","GridView","cells","hasMore","cellsData","length","pageSize","initialLoad","handleLoadMore","page","nextCellsNumber","console","log","Cell","cellComponent","pageStart","loadMore","useWindow","threshold","cellData","Grid","items","fetchItems","entityId","titleComponent","ArtworksGrid","useParams","fontWeight","ArtMovementCell","toLowerCase","replace","year","ArtMovementGrid","artMovementId","Popular","auto_spin","paintings_iter","paintings","fetchPopular","setInterval","scroll","n","k","App","isSearching","handleStartSearching","handleStopSearching","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b474d74f.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css'\nimport { MdSearch } from 'react-icons/md';\nimport { IconButton } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n  return (\n    <div className=\"header\">\n      <div className=\"header-logo\">\n        <Link to=\"/\">\n          Artsee\n        </Link>\n      </div>\n      <IconButton onClick={() => { props.onStartSearching() }}>\n        <MdSearch className=\"header-search\" />\n      </IconButton>\n    </div>\n  );\n}\n","import React from 'react'\nimport './LinkList.css'\nimport {Link} from \"react-router-dom\";\n\nexport default function LinkList(props) {\n    const max_items = 10;\n\n    function generateLinks() {\n        return props.data.slice(0, max_items).map((item, i) => \n            <li key={item[props.idFieldName]} className=\"LinkList-item\">\n                <Link to={props.url + item[props.idFieldName]} onClick={() => props.onLinkClick()}>\n                    {item[props.valueFieldName]}\n                </Link>\n            </li>\n        )\n    }\n\n    return (\n        <ul> {props.data !== undefined\n            ? generateLinks()\n            : null}\n        </ul>\n    )\n}\n","export const ROOT_URL = 'https://rustyag.herokuapp.com/api';\n//export const ROOT_URL = 'http://localhost:8000/api';\nexport const GET_SEARCH_URL = `${ROOT_URL}/search/`;\nexport const GET_ARTIST_URL = `${ROOT_URL}/artist/`;\nexport const GET_ARTWORK_URL = `${ROOT_URL}/paintings/`;\nexport const GET_ART_MOVEMENT_URL = `${ROOT_URL}/art_movement/`;\nexport const GET_ARTIST_ARTWORKS_URL = (artistId) => `${ROOT_URL}/artist/${artistId}/paintings/`;\nexport const GET_POPULAR_ARTWORKS = `${ROOT_URL}/popular/`;\nexport const POST_STYLE_TRANSFER = `${ROOT_URL}/transform/`;\n\nexport const ARTIST_URL = '/artist/';\nexport const ARTWORK_URL = '/paintings/';\nexport const ART_MOVEMENT_URL = '/art_movement/';\nexport const ARTIST_ARTWORKS_URL = (artistId) => `/artist/${artistId}/paintings/`;\n\nexport const GRID_PAGE_SIZE = 20;\n","import React, { Component } from 'react'\nimport './SearchResults.css'\nimport LinkList from './LinkList.js'\nimport {GET_SEARCH_URL, ARTIST_URL, ARTWORK_URL, ART_MOVEMENT_URL } from './../constants'\n\n\nexport default class SearchResults extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: {}\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.searchPhrase !== prevProps.searchPhrase) {\n            if (this.props.searchPhrase === \"\") return;\n            this.fetchSearchResults(this.props.searchPhrase)\n                .then(data => {\n                    if (data != null) this.setState({ results: data })\n                });\n        }\n    }\n\n    async fetchSearchResults(phrase) {\n        const response = fetch(`${GET_SEARCH_URL}${phrase}`)\n        if (phrase === this.props.searchPhrase)\n            return (await response).json()\n        return null\n    }\n\n    render() {\n        if (this.props.searchPhrase === \"\") {\n            return null;\n        }\n\n        return (\n            <div className=\"SearchResults\">\n                <div className=\"SearchResults-list\">\n                    <h2>Artists</h2>\n                    <LinkList onLinkClick={this.props.onLinkClick} data={this.state.results.artists} idFieldName=\"url\" valueFieldName=\"name\" url={ARTIST_URL} />\n                </div>\n                <div className=\"SearchResults-list\">\n                    <h2>Paintings</h2>\n                    <LinkList onLinkClick={this.props.onLinkClick} data={this.state.results.artworks} idFieldName=\"id\" valueFieldName=\"name\" url={ARTWORK_URL} />\n                </div>\n                <div className=\"SearchResults-list\">\n                    <h2>Styles</h2>\n                    <LinkList onLinkClick={this.props.onLinkClick} data={this.state.results.styles} idFieldName=\"url\" valueFieldName=\"name\" url={ART_MOVEMENT_URL} />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './Searcher.css'\nimport SearchResults from './SearchResults'\nimport { MdClose } from 'react-icons/md';\nimport { IconButton } from '@material-ui/core';\n\nexport default class Searcher extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tphrase: \"\",\n\t\t};\n\n\t\tthis.handleSearchPhraseChange = this.handleSearchPhraseChange.bind(this);\n\t\tthis.handleEscKeyDown = this.handleEscKeyDown.bind(this); \n\t}\n\n\thandleSearchPhraseChange(event) {\n\t\tthis.setState({ phrase: event.target.value });\n\t}\n\n\thandleEscKeyDown(event) {\n \t\tif (event.keyCode === 27 /*esc*/) {\n\t\t\tthis.props.onStopSearching();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Searcher\" onKeyDown={this.handleEscKeyDown}>\n\t\t\t\t<div className=\"SearcherInsides\">\n\t\t\t\t\t<IconButton onClick={this.props.onStopSearching} className=\"Searcher-close\">\n\t\t\t\t\t\t<MdClose className=\"Searcher-close-icon\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<input className=\"Searcher-searchbar\" type=\"search\" placeholder=\"Search\" autoFocus onKeyDown={this.handleEscKeyDown} onChange={this.handleSearchPhraseChange} />\n\t\t\t\t\t<SearchResults searchPhrase={this.state.phrase} onLinkClick={this.props.onStopSearching} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react'\nimport './NoContentMessage.css'\nimport { MdSentimentDissatisfied } from 'react-icons/md';\n\nexport default function NoContentMessage() {\n    return (\n        <div className=\"NoContentMessage\">\n            <div className=\"NoContentMessage-dialog\">\n                Sorry, content not found\n            </div>\n            <MdSentimentDissatisfied className=\"NoContentMessage-icon\"/>\n        </div>\n    )\n}\n","import React from 'react'\nimport './CubeSpinner.css'\n\nexport default function CubeSpinner() {\n    return (\n        <div className=\"CubeSpinner\">\n            <div className=\"CubeSpinner-cube1\"></div>\n            <div className=\"CubeSpinner-cube2\"></div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport './Entity.css';\nimport NoContentMessage from './../error/NoContentMessage';\nimport CubeSpinner from './../common/CubeSpinner.js';\n\n\nexport default class Entity extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            hasError: false,\n            data: [],\n        };\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.id !== prevProps.id) {\n            this.props.onEntityChange(false);\n            this.reset();\n            this.fetchData();\n        }   \n    }\n\n    reset() {\n        this.setState({\n            isLoaded: false,\n            hasError: false,\n            data: []\n        });\n    }\n\n    \n\n    async fetchData() {\n        try {\n            const response = await fetch(`${this.props.url}${this.props.id}`);\n            const receivedData = await response.json();\n            this.setState({\n                isLoaded: true,\n                data: receivedData,\n                hasError: false\n            });\n            this.props.onEntityChange(true);\n        } catch (e) {\n            this.setState({ hasError: true, isLoaded:true });\n            this.props.onEntityChange(true);\n        }\n    }\n\n    render() {\n        const description = React.cloneElement(this.props.description, {\n            data: this.state.data,\n            // className: this.props.description.props.className + \" Entity-description\"\n        })\n\n        const image = React.cloneElement(this.props.image, {\n            data: this.state.data,\n            // className: this.props.image.props.className + \" Entity-image\",\n            onLoad: () => null\n        })\n\n        const entity =\n            <div className=\"Entity\">\n                {description}\n                {image}\n            </div>\n\n        const noContent =\n            <div className=\"Entity-nocontent\">\n                <NoContentMessage />\n            </div>\n\n        if (!this.state.isLoaded) {\n            return <CubeSpinner />\n        }\n\n        return (\n            !this.state.hasError\n                ? entity\n                : noContent\n        )\n    }\n}\n","import React from 'react';\nimport './EntityDescription.css';\n\nexport default function EntityDescription(props) {\n    return (\n        <div className=\"EntityDescription\">\n            <div className=\"EntityDescription-title\">\n                {props.title}\n            </div>\n            <ul className=\"EntityDescription-properties\">\n                {props.children}\n            </ul>\n        </div>\n    )\n}\n","import React from 'react';\nimport './Item.css';\n\nexport default function Item(props) {\n    return (\n        <li key={props.name} className=\"Item\">\n            <div className=\"Item-name\">\n                {props.name}\n            </div>\n            <div className=\"Item-value\">\n                {props.value}\n            </div>\n        </li>\n    )\n}\n","import React from 'react'\nimport Item from './Item'\nimport { Link } from 'react-router-dom'\n\nexport default function MultiLinksItem(props) {\n    const linksList =\n        <ul>\n            {props.links.map((link, i) =>\n                <li key={link.name}>\n                    <Link to={\"/\" + link.url}>\n                        {link.name}\n                    </Link>\n                </li>\n            )}\n        </ul>\n\n    return (\n        <Item\n            name={props.name}\n            value={linksList}\n        />\n    )\n}\n","import React from 'react'\nimport Item from './Item'\n\n\nexport default function MultiItem(props) {\n    const valuesList =\n        <ul>\n            {props.values.map((value, i) =>\n                <li key={i}>{value}</li>\n            )}\n        </ul>\n\n    return (\n        <Item\n            name={props.name}\n            value={valuesList}\n        />\n    )\n}\n","import React from 'react'\nimport EntityDescription from './../entity/EntityDescription'\nimport Item from './../entity/item/Item.js'\nimport MultiLinkItem from './../entity/item/MultiLinksItem.js'\nimport MultiItem from '../entity/item/MultiItem';\n\nexport default function ArtistEntityDescription(props) {\n    const data = props.data;\n    return (\n        <EntityDescription title={data.name}>\n            {data.birth &&\n                <Item\n                    name=\"Born\"\n                    value={data.birth} />}\n            {data.death &&\n                <Item\n                    name=\"Died\"\n                    value={data.death} />}\n            {data.nationality &&\n                <Item\n                    name=\"Nationality\"\n                    value={data.nationality} />}\n            {data.field &&\n                <MultiItem\n                    name=\"Field\"\n                    values={data.field} />}\n            {data.painting_school &&\n                <Item\n                    name=\"Painting school\"\n                    value={data.painting_school} />}\n            {data.art_movement &&\n                <MultiLinkItem\n                    name=\"Art movement\"\n                    links={data.art_movement} />}\n            {data.influenced_by &&\n                <MultiLinkItem\n                    name=\"Influenced by\"\n                    links={data.influenced_by} />}\n        </EntityDescription>\n    )\n}\n","import React from 'react'\nimport './NoPhotoAvailable.css'\nimport { MdBrokenImage } from 'react-icons/md';\n\nexport default function NoPhotoAvailable() {\n    return (\n        <div className=\"NoPhotoAvailable\">\n            <MdBrokenImage className=\"NoPhotoAvailable-icon\"/>\n            <div className=\"NoPhotoAvailable-dialog\">\n                No image available\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport NoPhotoAvailable from './../error/NoPhotoAvailable.js';\nimport './LoadablePhoto.css';\n\nexport default class LoadablePhoto extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            hasError: false\n        }\n    }\n\n    handleLoading = () => {\n        this.setState({\n            isLoaded: true,\n            hasError: false\n        })\n    }\n\n    handleError = () => {\n        this.setState({\n            isLoaded: true,\n            hasError: true\n        });\n    }\n\n    render() {\n        const className = this.state.isLoaded\n            ? \"img-loaded\"\n            : \"img-loading\";\n\n        return (\n            !this.state.hasError\n                ? <img\n                    src={this.props.src}\n                    alt=\"\"\n                    className={className + \" \" + this.props.styleName}\n                    onLoad={this.handleLoading}\n                    onError={this.handleError} />\n                : <NoPhotoAvailable />\n        )\n    }\n}\n\n","import React from 'react';\nimport LoadablePhoto from '../common/LoadablePhoto';\nimport './EntityImage.css';\n\nexport default function EntityImage(props) {\n    return (\n        <div className=\"EntityImage\">\n            <LoadablePhoto \n                src={props.src} \n                onLoad={props.onLoad} \n                styleName=\"EntityImage-image\" />\n        </div>\n    )\n}\n","import React from 'react'\nimport EntityImage from '../entity/EntityImage'\n\n\nexport default function ArtistEntityImage(props) {\n    return (\n        <div>\n            <EntityImage src={props.data.image_url} onLoad={props.onLoad} />\n        </div>\n    )\n}","import React from 'react'\nimport Entity from '../entity/Entity.js'\nimport ArtistEntityDescription from './ArtistEntityDescription.js'\nimport ArtistEntityImage from './ArtistEntityImage.js'\nimport { GET_ARTIST_URL } from './../constants'\nimport './ArtistEntity.css'\n\nexport default function ArtistEntity(props) {\n    return (\n        <Entity\n            id={props.id}\n            url={GET_ARTIST_URL}\n            description={<ArtistEntityDescription />}\n            image={<ArtistEntityImage />}\n            onEntityChange={props.onArtistChange} />\n    )\n}\n","import React, { Component } from 'react';\nimport ArtistEntity from './ArtistEntity';\nimport { Link } from 'react-router-dom';\n\nexport default class Artist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isArtistLoaded: false\n        }\n        this.handleArtistChange = this.handleArtistChange.bind(this);\n    }\n\n    handleArtistChange(isArtistLoaded) {\n        this.setState({ isArtistLoaded });\n    }\n\n    render() {\n        const { artistId } = this.props.match.params;\n        \n        return (\n            <div className=\"Artist\">\n                <ArtistEntity id={artistId} onArtistChange={this.handleArtistChange} />\n                {this.state.isArtistLoaded &&\n                    <Link className=\"Artist-artworks\" to={`/artist/${artistId}/paintings/`}>See artworks</Link>}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Item from './Item'\nimport { Link } from 'react-router-dom'\n\nexport default function LinkItem(props) {\n    return (\n        <Item\n            name={props.name}\n            value={\n                <Link to={props.to}>\n                    {props.value}\n                </Link>\n            } />\n    )\n}\n","import React from 'react'\nimport EntityDescription from './../entity/EntityDescription'\nimport Item from './../entity/item/Item'\nimport LinkItem from './../entity/item/LinkItem'\nimport { ARTIST_URL } from './../constants.js'\nimport MultiLinksItem from '../entity/item/MultiLinksItem'\nimport MultiItem from '../entity/item/MultiItem'\n\n\nexport default function ArtworkEntityDescription(props) {\n    const data = props.data;\n    return (\n        <EntityDescription title={data.title}>\n            {data.artist_name && data.artist_url &&\n                <LinkItem\n                    name=\"Artist\"\n                    value={data.artist_name}\n                    to={ARTIST_URL + data.artist_url} />}\n            {data.completition_year &&\n                <Item\n                    name=\"Year\"\n                    value={data.completition_year} />}\n            {data.period &&\n                <Item\n                    name=\"Period\"\n                    value={data.period} />}\n            {data.serie &&\n                <Item\n                    name=\"Serie\"\n                    value={data.serie} />}\n            {data.location &&\n                <Item\n                    name=\"Location\"\n                    value={data.location} />}\n            {data.gallery &&\n                <Item\n                    name=\"Gallery\"\n                    value={data.gallery} />}\n            {data.media[0] &&\n                <MultiItem\n                    name=\"Media\"\n                    values={data.media} />}\n            {data.size_x && data.size_y &&\n                <Item\n                    name=\"Size\"\n                    value={data.size_x + \" x \" + data.size_y} />}\n            {data.styles &&\n                <MultiLinksItem\n                    name=\"Styles\"\n                    links={data.styles} />}\n        </EntityDescription>\n    )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MdCloudUpload } from 'react-icons/md/';\nimport './UploadButton.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        fontSize: 24,\n    }\n}));\n\n\nexport default function UploadButton(props) {\n    const classes = useStyles();\n    return (\n        <div>\n            <input\n                type=\"file\"\n                accept=\"image/*\"\n                id=\"contained-button-file\"\n                onChange={props.onUpload}\n                className=\"UploadButton-input\"\n            />\n            <label htmlFor=\"contained-button-file\">\n                <Button\n                    size=\"large\"\n                    className={classes.button}\n                    component=\"span\"\n                    startIcon={<MdCloudUpload size=\"40px\"/>}\n                >\n                    {props.text}\n                </Button>\n            </label>\n        </div>\n    )\n}\n\n","export function idToName(id) {\n    return id\n        .split(\"-\")\n        .map(word => word[0].toUpperCase() + word.substr(1))\n        .join(\" \");\n}\n\nexport function nameToId(name) {\n    return name\n        .toLowerCase()\n        .replace(/\\s/g, \"-\");\n}\n\nexport const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n});\n","import React from 'react';\nimport UploadButton from './../common/UploadButton'\nimport { POST_STYLE_TRANSFER } from './../constants.js'\nimport { toBase64 } from './../helper.js'\n\n\nexport default function StyleTransferButton(props) { \n\n    function loadImage(src){\n        return new Promise((resolve, reject) => {\n          let img = new Image();\n          img.onload = () => resolve(img);\n          img.onerror = reject;\n          img.src = src;\n        })\n      }\n\n    async function handleUpload(event) {\n        const file = event.target.files[0];\n        const fileBase64 = await toBase64(file);\n        const img = await loadImage(fileBase64);\n\n        const data = {\n            artworkId: props.artworkId,\n            file: fileBase64,\n            width: img.width,\n            height: img.height\n        }\n\n        const response = await fetch(POST_STYLE_TRANSFER, {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        })\n    }\n\n    return (\n        <UploadButton\n            text={\"Transform\"}\n            onUpload={handleUpload} />\n    )\n}\n\n","import React from 'react'\nimport EntityImage from '../entity/EntityImage'\nimport StyleTransferButton from './StyleTransferButton'\nimport './ArtworkEntityImage.css'\n\nexport default function ArtworkEntityImage(props) {\n    return (\n        <div className=\"ArtworkEntityImage\">\n            <EntityImage src={props.data.image} onLoad={props.onLoad} />\n            <div className=\"ArtworkEntityImage-upload\">\n                <StyleTransferButton\n                    text=\"Style transfer\"\n                    artworkId={props.data.image}\n                    className=\"ArtworkEntityImage-upload\" />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport Entity from '../entity/Entity.js'\nimport { GET_ARTWORK_URL } from './../constants'\nimport ArtworkEntityDescription from './ArtworkEntityDescription'\nimport './ArtworkEntity.css'\nimport ArtworkEntityImage from './ArtworkEntityImage.js'\n\n\nexport default function ArtworkEntity(props) {\n    return (\n        <Entity\n            id={props.id}\n            url={GET_ARTWORK_URL}\n            description={<ArtworkEntityDescription />}\n            image={<ArtworkEntityImage artworkId={props.id} />}\n            onEntityChange={props.onArtworkChange} />\n    )\n}\n\n","import React, { Component } from 'react'\nimport ArtworkEntity from './ArtworkEntity'\n\n\nexport default class Artwork extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isArtworkLoaded: false\n        }\n        this.handleArtworkChange = this.handleArtworkChange.bind(this);\n    }\n\n    handleArtworkChange(isArtworkLoaded) {\n        this.setState({ isArtworkLoaded: isArtworkLoaded });\n    }\n\n    render() {\n        let artworkId;\n        if ('match' in this.props) {\n            artworkId = this.props.match.params.artworkId\n        } else {\n            artworkId = this.props.artworkId\n        }\n\n        return (\n            <div className=\"Artwork\">\n                <ArtworkEntity id={artworkId} onArtworkChange={this.handleArtworkChange} />\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport './ArtworkCell.css'\nimport { Link } from 'react-router-dom'\nimport { ARTWORK_URL } from '../constants'\n\nexport default function ArtworkCell(props) {\n    const backgroundImageStyle = {\n        backgroundImage: `url(${props.data.image})`,\n        backgroundSize: 'cover',\n        height: `100%`\n    }\n\n    return (\n        <div className=\"ArtworkCell\">\n            <div className=\"ArtworkCell-picture\">\n                <Link to={ARTWORK_URL + props.data.contentId}>\n                    <div style={backgroundImageStyle}></div>\n                </Link>\n            </div>\n\n            <div className=\"ArtworkCell-description\">\n                <div className=\"ArtworkCell-description-title\">\n                    {props.data.title}\n                </div>\n                <div className=\"ArtworkCell-description-year\">\n                    {props.data.completitionYear}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './BlackAndWhiteLink.css'\n\nexport default function BlackAndWhiteLink(props) {\n    return (\n        <Link to={props.to} className=\"BlackAndWhiteLink\">\n            {props.children}\n        </Link>\n    )\n}\n","import React, { Component } from 'react'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport './GridView.css'\n\nexport default class GridView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cells: [],\n            hasMore: this.props.cellsData.length > this.props.pageSize,\n            initialLoad: true\n        }\n\n        this.handleLoadMore = this.handleLoadMore.bind(this);\n    }\n\n    handleLoadMore(page) {\n        const nextCellsNumber = this.props.pageSize * page;\n\n        console.log('dssad');\n\n        if (this.state.initialLoad === true) {\n            this.setState({ initialLoad: false });\n        }\n\n        if (this.props.cellsData.length > nextCellsNumber) {\n            this.setState({ cells: this.props.cellsData.slice(0, nextCellsNumber) });\n        } else {\n            this.setState({\n                cells: this.props.cellsData.slice(0, this.props.cellsData.length),\n                hasMore: false\n            });\n        }\n    }\n\n    render() {\n        const Cell = this.props.cellComponent;\n\n        return (\n            <InfiniteScroll\n                pageStart={0}\n                loadMore={this.handleLoadMore}\n                hasMore={this.state.hasMore}\n                initialLoad={this.state.initialLoad}\n                useWindow={true}\n                threshold={300}\n                className=\"GridView\"\n            >\n                {this.state.cells.map((cellData, i) =>\n                    React.cloneElement(Cell, {\n                        key: i,\n                        data: cellData\n                    })\n                )}\n            </InfiniteScroll>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './Grid.css'\nimport { GRID_PAGE_SIZE } from './../constants'\nimport GridView from './GridView'\nimport CubeSpinner from './../common/CubeSpinner'\n\nexport default class Grid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            items: []\n        }\n    }\n\n    async componentDidMount() {\n        const items = await this.fetchItems();\n        this.setState({\n            isLoaded: true,\n            items: items\n        })\n    }\n\n    async fetchItems() {\n        const response = await fetch(`${this.props.url}`);\n        const data = await response.json()\n        return data\n    }\n\n    decodeIdToName() {\n        return this.entityId\n            .split(\"-\")\n            .map(word => word[0].toUpperCase() + word.substr(1))\n            .join(\" \");\n    }\n\n    render() {\n        return (\n            <div className=\"Grid\">\n                <h2 className=\"Grid-title\">\n                    {this.props.titleComponent}\n                </h2>\n\n                {this.state.isLoaded\n                    ? <GridView\n                        cellsData={this.state.items}\n                        cellComponent={this.props.cellComponent}\n                        pageSize={GRID_PAGE_SIZE}\n                    />\n                    : <CubeSpinner />}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport './ArtworksGrid.css'\nimport '../common/CubeSpinner'\nimport { GET_ARTIST_ARTWORKS_URL, ARTIST_URL } from '../constants'\nimport ArtworkCell from './ArtworkCell.js'\nimport { useParams } from 'react-router-dom'\nimport BlackAndWhiteLink from '../common/BlackAndWhiteLink.js'\nimport Grid from '../grid/Grid'\nimport { idToName } from '../helper.js'\n\nexport default function ArtworksGrid() {\n    const { artistId } = useParams();\n    const title =\n        <div>\n            <BlackAndWhiteLink to={ARTIST_URL + artistId}>\n                {idToName(artistId)}\n            </BlackAndWhiteLink> \n            <span style={{ fontWeight: 'normal' }}> paintings</span>\n        </div>;\n\n    return (\n        <Grid\n            url={GET_ARTIST_ARTWORKS_URL(artistId)}\n            titleComponent={title}\n            cellComponent={<ArtworkCell />}\n        />\n    )\n}\n","import React from 'react'\nimport './ArtMovementCell.css'\nimport { Link } from 'react-router-dom'\nimport { ARTIST_URL, ARTWORK_URL } from '../constants'\nimport { nameToId } from '../helper'\n\nexport default function ArtMovementCell(props) {\n    const backgroundImageStyle = {\n        backgroundImage: `url(${props.data.image})`,\n        backgroundSize: 'cover',\n        height: `100%`\n    }\n\n    return (\n        <div className=\"ArtMovementCell\">\n            <div className=\"ArtMovementCell-picture\">\n                <Link to={ARTWORK_URL + props.data.id}>\n                    <div style={backgroundImageStyle}></div>\n                </Link>\n            </div>\n\n            <div className=\"ArtMovementCell-description\">\n                <div className=\"ArtMovementCell-description-title\">\n                    {props.data.title}\n                </div>\n                    <Link to={ARTIST_URL + nameToId(props.data.artist_name)} className=\"ArtMovementCell-description-artist\" >\n                        {props.data.artist_name}\n                    </Link>\n                <div className=\"ArtMovementCell-description-year\">\n                    {props.data.year}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { idToName } from './../helper.js'\nimport Grid from '../grid/Grid.js'\nimport { GET_ART_MOVEMENT_URL } from './../constants'\nimport ArtMovementCell from './ArtMovementCell.js'\n\nexport default function ArtMovementGrid() {\n    const { artMovementId } = useParams();\n    const title = <div>{idToName(artMovementId)}</div>;\n\n    return (\n        <Grid\n            url={GET_ART_MOVEMENT_URL + artMovementId}\n            titleComponent={title}\n            cellComponent={<ArtMovementCell />}\n        />\n    )\n}\n","import React, { Component } from 'react'\nimport { GET_POPULAR_ARTWORKS } from './../constants'\nimport ArtworkEntity from '../artwork/ArtworkEntity.js'\nimport { IconButton } from '@material-ui/core'\nimport { MdKeyboardArrowLeft } from 'react-icons/md'\nimport { MdKeyboardArrowRight } from 'react-icons/md'\nimport './Popular.css'\n\n\nexport default class Popular extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            auto_spin: true,\n            paintings_iter: 0,\n            paintings: null\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPopular()\n            .then(data => {\n                this.setState({ paintings: data });\n                setInterval(() => {\n                    if (this.state.auto_spin) {\n                        this.scroll(1, true)\n                    }\n                }, 7000)\n            })\n    }\n\n    async fetchPopular() {\n        const result = await fetch(`${GET_POPULAR_ARTWORKS}`);\n        return (await result).json();\n    }\n\n    scroll(n, auto_spin) {\n        this.setState({\n            auto_spin: auto_spin,\n            paintings_iter: (() => {\n                const k = (this.state.paintings_iter + n) % this.state.paintings.length;\n                if (k >= 0) return k;\n                return this.state.paintings.length - 1;\n            })()\n        });\n    }\n\n\n\n    render() {\n        if (this.state.paintings == null) {\n            return null;\n        }\n\n        return (\n            <div className=\"Popular\">\n                <div className=\"Popular-buttons\">\n                    <IconButton className=\"Popular-next\" onClick={() => this.scroll(-1, false)} >\n                        <MdKeyboardArrowLeft />\n                    </IconButton>\n                    <IconButton className=\"Popular-next\" onClick={() => this.scroll(1, false)} >\n                        <MdKeyboardArrowRight />\n                    </IconButton>\n                </div>\n                <ArtworkEntity id={this.state.paintings[this.state.paintings_iter].id} onArtworkChange={()=>null}/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './common/Header.js';\nimport Searcher from './searching/Searcher.js';\nimport Artist from './artist/Artist';\nimport Artwork from './artwork/Artwork';\nimport ArtworksGrid from './artwork/ArtworksGrid';\nimport ArtMovementGrid from './artmovement/ArtMovementGrid';\nimport Popular from './popular/Popular';\n\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisSearching: false,\n\t\t};\n\n\t\tthis.handleStartSearching = this.handleStartSearching.bind(this)\n\t\tthis.handleStopSearching = this.handleStopSearching.bind(this)\n\t}\n\n\thandleStartSearching() {\n\t\tthis.setState({ isSearching: true })\n\t}\n\n\thandleStopSearching() {\n\t\tthis.setState({ isSearching: false })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t<Header onStartSearching={this.handleStartSearching} />\n\t\t\t\t\t</header>\n\t\t\t\t\t<main className=\"App-main\">\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/artist/:artistId/paintings/\" component={ArtworksGrid} />\n\t\t\t\t\t\t\t<Route path=\"/artist/:artistId/\" component={Artist} />\n\t\t\t\t\t\t\t<Route path=\"/paintings/:artworkId/\" component={Artwork} />\n\t\t\t\t\t\t\t<Route path=\"/art_movement/:artMovementId/\" component={ArtMovementGrid} />\n                            <Route path=\"/\" component={Popular}/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</main>\n\t\t\t\t\t{this.state.isSearching\n\t\t\t\t\t\t? <div className=\"App-searcher\"><Searcher onStopSearching={this.handleStopSearching} /></div>\n\t\t\t\t\t\t: null}\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}